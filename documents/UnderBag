# UnderBag

## Description
The Under Bagging algorithm combines the principles of bagging with a focus on under-sampling the majority class to balance the dataset.

## Class Definition
```python
<pre style="color:blue">
class UnderBag:
</pre>
    """
    Under Bagging algorithm
    
    Attributes:
        n_estimator (int): number of classidiers in the ensemnble.
        estimator (object): a sample of .
    """
    
    def __init__(self, n_estimator, estimator):
        """
        Initialize the classifier with parameters.
        
        Args:
            n_estimator (int): number of classidiers in the ensemnble.
            estimator (object): an instance of a base classifier.
        """
        self.n_estimator = n_estimator
        self.baseclassifier = estimator
    
    def __make_bootstraps(self,data):
        """
        Generates multiple bootstrap samples by repeatedly sampling with replacement from the data.
        
        Args:
            data (list): The training data.
        """
        Returns:
            dictionary: bootstrap samples.

    def fit(self, X_train,y_train):
        """
        Fit the classifier to the data.
        
        Args:
            X_train (2D numpy array): The training samples to fit the classifier to.
            y_train (1D numpy array): The class labels for training samples.
        """

    def predict(self, X):
        """
        Make predictions based on the fitted model.
        
        Args:
            X (2D array): The data to make predictions on.
        
        Returns:
            numpy array: Predictions.
        """

